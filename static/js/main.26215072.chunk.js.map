{"version":3,"sources":["Assets/Img/loading.gif","Assets/Img/norrisbot.png","Store/CategoriesReducer.js","Store/index.js","Components/Categories/Components/Category.js","Services/ChuckNorrisApi.js","Store/CategoriesActions.js","Components/Loading/Loading.js","Components/Categories/Categories.js","Pages/HomePage.js","Components/Joke/Components/JokeItem.js","Components/Joke/Joke.js","Pages/JokePage.js","App/Routes.js","index.js","App/App.js"],"names":["module","exports","INITIAL_STATE","Data","categories","state","action","type","Categories","Categorie","Reducers","combineReducers","store","createStore","Category","className","to","api","axios","create","baseURL","getAllCategories","a","async","get","result","data","console","error","getJokeByCategory","addCategories","Loading","src","GifLoading","alt","useSelector","useState","IsLoading","setIsLoading","dispatch","useDispatch","useEffect","length","ChuckNorrisApi","CategoriesActions","map","CategoryItem","key","HomePage","ChuckNorrisImg","JokeItem","Joke","onClick","value","setJoke","id","JokePage","this","props","match","params","Component","Routes","exact","path","component","ReactDOM","render","Store","document","getElementById"],"mappings":"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","file":"static/js/main.26215072.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.f31331d3.gif\";","module.exports = __webpack_public_path__ + \"static/media/norrisbot.3bfa756f.png\";","const INITIAL_STATE = {\n\tData: []\n}\n\nfunction categories(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\t\tcase 'ADD_CATEGORIES':\n\t\t\treturn { ...state, Data: [...state.Data, ...action.Categories] };\n\t\tcase 'ADD_CATEGORIE':\n\t\t\treturn { ...state, Data: [...state.Data, action.Categorie] };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default categories;","import { createStore, combineReducers } from \"redux\";\nimport Categories from './CategoriesReducer';\n\nconst Reducers = combineReducers({\n\tCategories\n})\nconst store = createStore(Reducers);\n\nexport default store;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Category.scss';\n\nexport default function Category({Category}) {\n\treturn (\n\t\t<li className=\"category\">\n\t\t\t<Link to={`/category/${Category}`}>{Category}</Link>\n\t\t</li>\n  );\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.chucknorris.io/',\n});\n\napi.getAllCategories = async function () {\n\ttry {\n\t\tconst result = await api.get(`/jokes/categories`);\n\t\treturn result.data;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tthrow error;\n\t}\n}\n\napi.getJokeByCategory = async function ({Category}) {\n\ttry {\n\t\tconst result = await api.get(`/jokes/random?category=${Category}`);\n\t\treturn result.data;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tthrow error;\n\t}\n}\n\n\nexport default api;\n","function addCategories({ Categories }) {\n\treturn {type: 'ADD_CATEGORIES', Categories}\n}\n\nexport default {\n\taddCategories\n}","import React from 'react';\n\nimport GifLoading from '../../Assets/Img/loading.gif';\nimport './Loading.scss';\n\nexport default function Loading() {\n\treturn (\n\t\t<div className=\"loading\">\n\t\t\t<img src={GifLoading} alt=\"Carregando\" />\n\t\t\tCarregando ...\n\t\t</div>\n\t);\n}\n","import React, {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Category from './Components/Category';\nimport ChuckNorrisApi from '../../Services/ChuckNorrisApi';\nimport CategoriesActions from '../../Store/CategoriesActions';\nimport Loading from '../Loading/Loading';\nimport './Categories.scss';\n\n\nexport default function Categories() {\n\tconst Categories = useSelector(state => state.Categories.Data);\n\tconst [IsLoading, setIsLoading] = useState(false);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tasync function getAllCategories() {\n\t\t\ttry {\n\t\t\t\tsetIsLoading(true);\n\n\t\t\t\tconst result = await ChuckNorrisApi.getAllCategories();\n\t\t\t\tdispatch(CategoriesActions.addCategories({Categories: result}));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false)\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Categories && Categories.length > 0) return;\n\t\tgetAllCategories();\n\t}, [Categories, dispatch]);\n\n\treturn (\n\t\t<div>\n\t\t\t{IsLoading ? <Loading /> : null}\n\t\t\t<ul className=\"categories\">\n\t\t\t\t{Categories.map(\n\t\t\t\t\tCategoryItem =>\n\t\t\t\t\t\t<Category key={CategoryItem} Category={CategoryItem} />\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Categories from '../Components/Categories/Categories';\nimport ChuckNorrisImg from '../Assets/Img/norrisbot.png';\n\nimport './HomePage.scss'\n\nexport default function HomePage() {\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<img src={ChuckNorrisImg} alt=\"Chuck Norris\"/>\n\t\t\t<h1>Categorias</h1>\n\t\t\t<Categories />\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nimport './JokeItem.scss';\n\nexport default function JokeItem({Joke, onClick}) {\n\treturn (\n\t\t<div className=\"joke-item\">\n\t\t\t<blockquote>\n\t\t\t\t<p>{Joke.value}</p>\n\t\t\t</blockquote>\n\t\t\t<button onClick={onClick}>Carregar outra</button>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from 'react';\nimport ChuckNorrisApi from '../../Services/ChuckNorrisApi';\nimport JokeItem from './Components/JokeItem';\nimport Loading from '../Loading/Loading';\nimport './Joke.scss';\n\nexport default function Joke({ Category }) {\n\tconst [Joke, setJoke] = useState({});\n\tconst [IsLoading, setIsLoading] = useState(false);\n\n\tasync function getJokeByCategory() {\n\t\ttry {\n\t\t\tsetIsLoading(true);\n\t\t\tconst result = await ChuckNorrisApi.getJokeByCategory({Category});\n\t\t\tsetJoke(result);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tgetJokeByCategory(Category);\n\t}, []); //eslint-disable-line\n\t\n\treturn (\n\t\t<div className=\"joke\">\n\t\t\t{IsLoading ? <Loading /> : null}\n\t\t\t{Joke && Joke.id ? <JokeItem Joke={Joke} onClick={getJokeByCategory} /> : null}\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport Joke from '../Components/Joke/Joke';\nimport { Link } from 'react-router-dom';\nimport './JokePage.scss';\n\nexport default class JokePage extends Component {\n\trender() {\n\t\treturn <div className=\"joke-page\">\n\t\t\t<Link to=\"/\" className=\"home-link\"> <i className=\"material-icons\">arrow_back</i>Categorias</Link>\n\t\t\t<Joke Category={this.props.match.params.Category} />\n\t\t</div>;\n\t}\n}\n\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport HomePage from '../Pages/HomePage';\nimport JokePage from '../Pages/JokePage';\nimport React from 'react';\n\nexport default function Routes() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t<Route path=\"/category/:Category\" component={JokePage} /> } />\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Store from '../Store/index';\nimport Routes from './Routes'\n\nexport default function App() {\n\n\treturn (\n\t\t<Provider store={Store}>\n\t\t\t<Routes />\n\t\t</Provider>\n\t);\n}\n"],"sourceRoot":""}